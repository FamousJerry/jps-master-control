name: Deploy to Firebase & Cloud Run

on:
  push:
    branches: ["fresh_start", "main"]

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    env:
      GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      GCP_REGION: ${{ secrets.GCP_REGION }}
      IMAGE_NAME: jps-web

    steps:
      - uses: actions/checkout@v4

      - name: Preflight â€” repo claim must match provider condition
        run: |
          echo "Repo: ${{ github.repository }}"
          if [ "${{ github.repository }}" != "FamousJerry/jps-master-control" ]; then
            echo "::error::Repo mismatch vs provider condition"
            exit 1
          fi

      - id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: projects/532726782263/locations/global/workloadIdentityPools/github/providers/github-provider
          service_account: github-deployer@jps-app-468911.iam.gserviceaccount.com

      - uses: google-github-actions/setup-gcloud@v2

      - name: Install Firebase CLI
        run: curl -sL https://firebase.tools | bash

      - name: Deploy Firestore rules & Functions
        run: |
          set -e
          cd functions
          npm ci || npm install
          npm run build
          cd -
          firebase deploy --project "$GCP_PROJECT_ID" --only firestore:rules,functions --force

      - name: Build container (Cloud Build)
        run: |
          set -euo pipefail
          IMAGE="gcr.io/$GCP_PROJECT_ID/$IMAGE_NAME:${{ github.sha }}"
          echo "Submitting Cloud Build for $IMAGE"
          BUILD_ID="$(gcloud builds submit --tag "$IMAGE" --async --format='value(id)')"
          echo "Build ID: $BUILD_ID"
          # poll status without streaming logs (avoids log-bucket permission issue)
          while true; do
            STATUS="$(gcloud builds describe "$BUILD_ID" --format='value(status)')"
            echo "Cloud Build status: $STATUS"
            case "$STATUS" in
              SUCCESS) break ;;
              FAILURE|CANCELLED|EXPIRED) echo "::error::Cloud Build failed with status $STATUS"; exit 1 ;;
              *) sleep 5 ;;
            esac
          done

      - name: Deploy to Cloud Run
        run: |
          set -e
          gcloud run deploy $IMAGE_NAME \
            --image gcr.io/$GCP_PROJECT_ID/$IMAGE_NAME:${{ github.sha }} \
            --region "$GCP_REGION" \
            --allow-unauthenticated \
            --port 8080 \
            --memory 512Mi \
            --cpu 1 \
            --max-instances 20 \
            --min-instances 0 \
            --timeout 60s
